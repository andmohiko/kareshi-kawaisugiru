rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // 送られてきたリクエストのデータ
    function requestData() {
      return request.resource.data;
    }

    // すでに保存されているデータ
    function existingData() {
      return resource.data;
    }

    // ログイン済かどうか
    function isSignedIn() {
      return request.auth.uid != null;
    }

    // ユーザーIDが一致するかどうか
    function isUser(userId) {
      return request.auth.uid == userId;
    }

    function isValidKareshiSchema(requestData) {
      return requestData.size() == 8
        && 'createdAt' in requestData && requestData.createdAt is timestamp
        && 'kareshiName' in requestData && (requestData.kareshiName is string || requestData.kareshiName == null)
        && 'landscapeImageUrl' in requestData && (requestData.landscapeImageUrl is string || requestData.landscapeImageUrl == null)
        && 'ogpImageUrl' in requestData && (requestData.ogpImageUrl is string || requestData.ogpImageUrl == null)
        && 'portraitImageUrl' in requestData && (requestData.portraitImageUrl is string || requestData.portraitImageUrl == null)
        && 'squareImageUrl' in requestData && (requestData.squareImageUrl is string || requestData.squareImageUrl == null)
        && 'updatedAt' in requestData && requestData.updatedAt is timestamp
        && 'username' in requestData && (requestData.username is string || requestData.username == null);
    }

    function isValidUserSchema(requestData) {
      return requestData.size() == 4
        && 'createdAt' in requestData && requestData.createdAt is timestamp
        && 'email' in requestData && requestData.email is string
        && 'name' in requestData && requestData.name == null
        && 'updatedAt' in requestData && requestData.updatedAt is timestamp;
    }

    match /kareshis/{kareshiId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && isUser(kareshiId) && isValidKareshiSchema(requestData());
      allow update: if isSignedIn() && isUser(kareshiId) && isValidKareshiSchema(requestData());
      allow delete: if isSignedIn() && isUser(kareshiId);
    }

    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && isUser(userId) && isValidUserSchema(requestData());
    }
  }
}
